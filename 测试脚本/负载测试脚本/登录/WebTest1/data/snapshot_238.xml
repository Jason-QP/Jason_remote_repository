<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="238">
  <HTTPTask id="2805" hostname="update.googleapis.com" path="http://update.googleapis.com/service/update2/json?cup2key=13:itPH3u8ZButxTKNihIkYeHWdcQGbexpEKTN1e1jZz-w&amp;cup2hreq=4e0ad16b843d1a9a92967a9a015f42243f41f26e15d6b8a67adc6c6356ff6050" url="http://update.googleapis.com/service/update2/json?cup2key=13:itPH3u8ZButxTKNihIkYeHWdcQGbexpEKTN1e1jZz-w&amp;cup2hreq=4e0ad16b843d1a9a92967a9a015f42243f41f26e15d6b8a67adc6c6356ff6050" ip="58.254.149.226" port="80" connectionId="8" origin="Primary" frame="1" startTime="11083906" endTime="11083906">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>Y3VwMmtleT0xMzppdFBIM3U4WkJ1dHhUS05paElrWWVIV2RjUUdiZXhwRUtUTjFlMWpaei13JmN1cDJocmVxPTRlMGFkMTZiODQzZDFhOWE5Mjk2N2E5YTAxNWY0MjI0M2Y0MWYyNmUxNWQ2YjhhNjdhZGM2YzYzNTZmZjYwNTA=</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="cup2key" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MTM6aXRQSDN1OFpCdXR4VEtOaWhJa1llSFdkY1FHYmV4cEVLVE4xZTFqWnotdw==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="cup2hreq" index="1">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>NGUwYWQxNmI4NDNkMWE5YTkyOTY3YTlhMDE1ZjQyMjQzZjQxZjI2ZTE1ZDZiOGE2N2FkYzZjNjM1NmZmNjA1MA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="POST">
      <HTTPHeaders>
        <HTTPHeaderEntity name="X-Goog-Update-AppId" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aWhubGNlbm9jZWhnZGFlZ2RtaGJpZGpobmhkY2hmbW0sbmVpZmFvaW5kZ2dmY2ppY2Zma2dwbW5scHBlZmZhYmQsb2ltb21wZWNhZ25hamRlamdubmppam9iZWJhZWlnZWssZ2NtamttZ2RsZ25ra2NvY21vZWltaW5haWptbWpuaWksb2JlZGJiaGJwbW9qbmthbmljaW9nZ25tZWxtb29tb2MsbG1lbGdsZWpoZW1lamdpbnBib2FnZGRnZGZiZXBnbXAsa2lhYmhhYmpkYmtqZHBqYnBpZ2ZvZGJkam1iZ2xjb28sZ2lla2NtbWxua2xlbmxhb21wcGtwaGtuam1ubnBuZWgsa2hhb2llYm5ka29qbG1wcGVlbWpoYnBiYW5kaWxqcGUsaGZua3BpbWxoaGdpZWFkZGdmZW1qaG9mbWZibG1uaWIsbGxrZ2pmZmNkcGZmbWhpYWttZmNkY2Jsb2hjY3BmbW8sbGFvaWdwYmxubGxnY2dqbmpubGxtZm9sY2twamxoa2ksZWhnaWRwbmRibGxhY3BqYWxraWlta2JhZGdqZm5ubWMsZWZuaW9qbG5qbmRtY2JpaWVlZ2tpY2Fkbm9lY2pqZWYsamZsb29rZ25rY2NraG9iYWdsbmRpY25iYmdib25lZ2QsZ2dra2VoZ2JuZmpwZWdnZnBsZWVha3BpZGJraWJibW4samFtaGNubmtpaGlubWRsa2Fra2FvcGJqYmJjbmdmbGMsb2pocGpsb2NtYm9nZGdtZnBraGxhYWVhbWliaG5waGgsZWVpZ3BuZ2JnY29nbmFkZWVia2lsY3BjYWVkaGVsbGgsamZsaGNoY2NtcHBrZmVia2lhbWluYWdlZWhtY2hpa20sZ29ucGVtZGdramNlY2RnYm5hYWJpcHBwYm1nZmdnYmUsbmlpa2hkZ2FqbHBoZmVoZXBhYmhoYmxha2JkZ2VlZmo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Goog-Update-Interactivity" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ymc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Goog-Update-Updater" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2hyb21lLTEyMC4wLjYwOTkuMTI5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vanNvbg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMC4wLjAuMCBTYWZhcmkvNTM3LjM2</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dXBkYXRlLmdvb2dsZWFwaXMuY29t</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ODU4Mg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expect" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTAwLWNvbnRpbnVl</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Q2xvc2U=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UE9TVCBodHRwOi8vdXBkYXRlLmdvb2dsZWFwaXMuY29tL3NlcnZpY2UvdXBkYXRlMi9qc29uP2N1cDJrZXk9MTM6aXRQSDN1OFpCdXR4VEtOaWhJa1llSFdkY1FHYmV4cEVLVE4xZTFqWnotdyZjdXAyaHJlcT00ZTBhZDE2Yjg0M2QxYTlhOTI5NjdhOWEwMTVmNDIyNDNmNDFmMjZlMTVkNmI4YTY3YWRjNmM2MzU2ZmY2MDUwIEhUVFAvMS4xDQpYLUdvb2ctVXBkYXRlLUFwcElkOiBpaG5sY2Vub2NlaGdkYWVnZG1oYmlkamhuaGRjaGZtbSxuZWlmYW9pbmRnZ2ZjamljZmZrZ3BtbmxwcGVmZmFiZCxvaW1vbXBlY2FnbmFqZGVqZ25uamlqb2JlYmFlaWdlayxnY21qa21nZGxnbmtrY29jbW9laW1pbmFpam1tam5paSxvYmVkYmJoYnBtb2pua2FuaWNpb2dnbm1lbG1vb21vYyxsbWVsZ2xlamhlbWVqZ2lucGJvYWdkZGdkZmJlcGdtcCxraWFiaGFiamRia2pkcGpicGlnZm9kYmRqbWJnbGNvbyxnaWVrY21tbG5rbGVubGFvbXBwa3Boa25qbW5ucG5laCxraGFvaWVibmRrb2psbXBwZWVtamhicGJhbmRpbGpwZSxoZm5rcGltbGhoZ2llYWRkZ2ZlbWpob2ZtZmJsbW5pYixsbGtnamZmY2RwZmZtaGlha21mY2RjYmxvaGNjcGZtbyxsYW9pZ3BibG5sbGdjZ2puam5sbG1mb2xja3BqbGhraSxlaGdpZHBuZGJsbGFjcGphbGtpaW1rYmFkZ2pmbm5tYyxlZm5pb2psbmpuZG1jYmlpZWVna2ljYWRub2VjamplZixqZmxvb2tnbmtjY2tob2JhZ2xuZGljbmJiZ2JvbmVnZCxnZ2trZWhnYm5manBlZ2dmcGxlZWFrcGlkYmtpYmJtbixqYW1oY25ua2loaW5tZGxrYWtrYW9wYmpiYmNuZ2ZsYyxvamhwamxvY21ib2dkZ21mcGtobGFhZWFtaWJobnBoaCxlZWlncG5nYmdjb2duYWRlZWJraWxjcGNhZWRoZWxsaCxqZmxoY2hjY21wcGtmZWJraWFtaW5hZ2VlaG1jaGlrbSxnb25wZW1kZ2tqY2VjZGdibmFhYmlwcHBibWdmZ2diZSxuaWlraGRnYWpscGhmZWhlcGFiaGhibGFrYmRnZWVmag0KWC1Hb29nLVVwZGF0ZS1JbnRlcmFjdGl2aXR5OiBiZw0KWC1Hb29nLVVwZGF0ZS1VcGRhdGVyOiBjaHJvbWUtMTIwLjAuNjA5OS4xMjkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMC4wLjAuMCBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkhvc3Q6IHVwZGF0ZS5nb29nbGVhcGlzLmNvbQ0KQ29udGVudC1MZW5ndGg6IDg1ODINCkV4cGVjdDogMTAwLWNvbnRpbnVlDQpDb25uZWN0aW9uOiBDbG9zZQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="4">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Content-Security-Policy" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2NyaXB0LXNyYyAncmVwb3J0LXNhbXBsZScgJ25vbmNlLXJ5Q2VWalVjaElDREU4SlZzMFRNZ0EnICd1bnNhZmUtaW5saW5lJyAnc3RyaWN0LWR5bmFtaWMnIGh0dHBzOiBodHRwOjtvYmplY3Qtc3JjICdub25lJztiYXNlLXVyaSAnc2VsZic7cmVwb3J0LXVyaSBodHRwczovL2NzcC53aXRoZ29vZ2xlLmNvbS9jc3AvY2xpZW50dXBkYXRlLWF1cy8x</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGUsIG5vLXN0b3JlLCBtYXgtYWdlPTAsIG11c3QtcmV2YWxpZGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Pragma" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW9uLCAwMSBKYW4gMTk5MCAwMDowMDowMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAyMiBEZWMgMjAyMyAxNDoxOTozMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Cup-Server-Proof" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MzA0NTAyMjAwYjdmYmM5NmYwMzU4YTZkMGY4OTJhODgxMTA3NGQyNzEwZmEwZjA4NTc1MzgyNzAyMjk2ZWUwNDg4NTA5Yjk4MDIyMTAwZmFhMmY4YWQyMmRmMzVlMDMwMjNlOTgzNWUxMWMyNmIxZjRjYTQwODZmM2E4NmM4MTYxZDg2OGJlODc1OTNiMDo0ZTBhZDE2Yjg0M2QxYTlhOTI5NjdhOWEwMTVmNDIyNDNmNDFmMjZlMTVkNmI4YTY3YWRjNmM2MzU2ZmY2MDUw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ETag" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Vy8iMzA0NTAyMjAwYjdmYmM5NmYwMzU4YTZkMGY4OTJhODgxMTA3NGQyNzEwZmEwZjA4NTc1MzgyNzAyMjk2ZWUwNDg4NTA5Yjk4MDIyMTAwZmFhMmY4YWQyMmRmMzVlMDMwMjNlOTgzNWUxMWMyNmIxZjRjYTQwODZmM2E4NmM4MTYxZDg2OGJlODc1OTNiMDo0ZTBhZDE2Yjg0M2QxYTlhOTI5NjdhOWEwMTVmNDIyNDNmNDFmMjZlMTVkNmI4YTY3YWRjNmM2MzU2ZmY2MDUwIg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Daynum" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NjE5OQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Daystart" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjI3NzE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0FNRU9SSUdJTg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="14">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTA2NA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="15">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R1NF</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="16">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2xvc2U=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVNlY3VyaXR5LVBvbGljeTogc2NyaXB0LXNyYyAncmVwb3J0LXNhbXBsZScgJ25vbmNlLXJ5Q2VWalVjaElDREU4SlZzMFRNZ0EnICd1bnNhZmUtaW5saW5lJyAnc3RyaWN0LWR5bmFtaWMnIGh0dHBzOiBodHRwOjtvYmplY3Qtc3JjICdub25lJztiYXNlLXVyaSAnc2VsZic7cmVwb3J0LXVyaSBodHRwczovL2NzcC53aXRoZ29vZ2xlLmNvbS9jc3AvY2xpZW50dXBkYXRlLWF1cy8xDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZSwgbm8tc3RvcmUsIG1heC1hZ2U9MCwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQpFeHBpcmVzOiBNb24sIDAxIEphbiAxOTkwIDAwOjAwOjAwIEdNVA0KRGF0ZTogRnJpLCAyMiBEZWMgMjAyMyAxNDoxOTozMSBHTVQNClgtQ3VwLVNlcnZlci1Qcm9vZjogMzA0NTAyMjAwYjdmYmM5NmYwMzU4YTZkMGY4OTJhODgxMTA3NGQyNzEwZmEwZjA4NTc1MzgyNzAyMjk2ZWUwNDg4NTA5Yjk4MDIyMTAwZmFhMmY4YWQyMmRmMzVlMDMwMjNlOTgzNWUxMWMyNmIxZjRjYTQwODZmM2E4NmM4MTYxZDg2OGJlODc1OTNiMDo0ZTBhZDE2Yjg0M2QxYTlhOTI5NjdhOWEwMTVmNDIyNDNmNDFmMjZlMTVkNmI4YTY3YWRjNmM2MzU2ZmY2MDUwDQpFVGFnOiBXLyIzMDQ1MDIyMDBiN2ZiYzk2ZjAzNThhNmQwZjg5MmE4ODExMDc0ZDI3MTBmYTBmMDg1NzUzODI3MDIyOTZlZTA0ODg1MDliOTgwMjIxMDBmYWEyZjhhZDIyZGYzNWUwMzAyM2U5ODM1ZTExYzI2YjFmNGNhNDA4NmYzYTg2YzgxNjFkODY4YmU4NzU5M2IwOjRlMGFkMTZiODQzZDFhOWE5Mjk2N2E5YTAxNWY0MjI0M2Y0MWYyNmUxNWQ2YjhhNjdhZGM2YzYzNTZmZjYwNTAiDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgNClgtRGF5bnVtOiA2MTk5DQpYLURheXN0YXJ0OiAyMjc3MQ0KQ29udGVudC1FbmNvZGluZzogZ3ppcA0KWC1Db250ZW50LVR5cGUtT3B0aW9uczogbm9zbmlmZg0KWC1GcmFtZS1PcHRpb25zOiBTQU1FT1JJR0lODQpYLVhTUy1Qcm90ZWN0aW9uOiAxOyBtb2RlPWJsb2NrDQpDb250ZW50LUxlbmd0aDogMTA2NA0KU2VydmVyOiBHU0UNCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="4">
            <ActualData>KV19Jwp7InJlc3BvbnNlIjp7InNlcnZlciI6InByb2QiLCJwcm90b2NvbCI6IjMuMSIsImRheXN0YXJ0Ijp7ImVsYXBzZWRfc2Vjb25kcyI6MjI3NzEsImVsYXBzZWRfZGF5cyI6NjE5OX0sImFwcCI6W3siY29ob3J0aGludCI6IldpbiAoSW5jbHVkaW5nIHVwLXRvLWRhdGUpIiwiYXBwaWQiOiJpaG5sY2Vub2NlaGdkYWVnZG1oYmlkamhuaGRjaGZtbSIsImNvaG9ydCI6IjE6OiIsInN0YXR1cyI6Im9rIiwiY29ob3J0bmFtZSI6IiIsInBpbmciOnsic3RhdHVzIjoib2sifSwidXBkYXRlY2hlY2siOnsic3RhdHVzIjoibm91cGRhdGUifX0seyJjb2hvcnRoaW50IjoiV2luZG93cyAoMTAyKywgY2FuYXJ5L2Rldi9iZXRhL3N0YWJsZSkiLCJhcHBpZCI6Im5laWZhb2luZGdnZmNqaWNmZmtncG1ubHBwZWZmYWJkIiwiY29ob3J0IjoiMToxMjk5OiIsInN0YXR1cyI6Im9rIiwiY29ob3J0bmFtZSI6IkF1dG8iLCJwaW5nIjp7InN0YXR1cyI6Im9rIn0sInVwZGF0ZWNoZWNrIjp7InN0YXR1cyI6Im5vdXBkYXRlIn19LHsiY29ob3J0aGludCI6IjQuMTAuMjU1Ny4wIGZvciBDaHJvbWUgOTUrIiwiYXBwaWQiOiJvaW1vbXBlY2FnbmFqZGVqZ25uamlqb2JlYmFlaWdlayIsImNvaG9ydCI6IjE6MXpkeDoiLCJzdGF0dXMiOiJvayIsImNvaG9ydG5hbWUiOiJDaHJvbWUgMTA2KyIsInBpbmciOnsic3RhdHVzIjoib2sifSwidXBkYXRlY2hlY2siOnsic3RhdHVzIjoibm91cGRhdGUifX0seyJjb2hvcnRoaW50IjoiTTU0QW5kVXAiLCJhcHBpZCI6ImdjbWprbWdkbGdua2tjb2Ntb2VpbWluYWlqbW1qbmlpIiwiY29ob3J0IjoiMTpibTE6Iiwic3RhdHVzIjoib2siLCJjb2hvcnRuYW1lIjoiU3RhYmxlIiwicGluZyI6eyJzdGF0dXMiOiJvayJ9LCJ1cGRhdGVjaGVjayI6eyJzdGF0dXMiOiJub3VwZGF0ZSJ9fSx7ImNvaG9ydGhpbnQiOiJBdXRvIiwiYXBwaWQiOiJvYmVkYmJoYnBtb2pua2FuaWNpb2dnbm1lbG1vb21vYyIsImNvaG9ydCI6IjE6czZmOjIwb2xAMC41Iiwic3RhdHVzIjoib2siLCJjb2hvcnRuYW1lIjoiQXV0byIsInBpbmciOnsic3RhdHVzIjoib2sifSwidXBkYXRlY2hlY2siOnsic3RhdHVzIjoibm91cGRhdGUifX0seyJjb2hvcnRoaW50IjoiQXV0byIsImFwcGlkIjoibG1lbGdsZWpoZW1lamdpbnBib2FnZGRnZGZiZXBnbXAiLCJjb2hvcnQiOiIxOmx3bDoiLCJzdGF0dXMiOiJvayIsImNvaG9ydG5hbWUiOiJBdXRvIiwicGluZyI6eyJzdGF0dXMiOiJvayJ9LCJ1cGRhdGVjaGVjayI6eyJzdGF0dXMiOiJub3VwZGF0ZSIsImluZm8iOiJiYW5kd2lkdGggbGltaXQifX0seyJjb2hvcnRoaW50IjoiQXV0byIsImFwcGlkIjoia2lhYmhhYmpkYmtqZHBqYnBpZ2ZvZGJkam1iZ2xjb28iLCJjb2hvcnQiOiIxOnYzbDoiLCJzdGF0dXMiOiJvayIsImNvaG9ydG5hbWUiOiJBdXRvIiwicGluZyI6eyJzdGF0dXMiOiJvayJ9LCJ1cGRhdGVjaGVjayI6eyJzdGF0dXMiOiJub3VwZGF0ZSJ9fSx7ImNvaG9ydGhpbnQiOiJBdXRvIiwiYXBwaWQiOiJnaWVrY21tbG5rbGVubGFvbXBwa3Boa25qbW5ucG5laCIsImNvaG9ydCI6IjE6ajVsOiIsInN0YXR1cyI6Im9rIiwiY29ob3J0bmFtZSI6IkF1dG8iLCJwaW5nIjp7InN0YXR1cyI6Im9rIn0sInVwZGF0ZWNoZWNrIjp7InN0YXR1cyI6Im5vdXBkYXRlIn19LHsiY29ob3J0aGludCI6IkF1dG8iLCJhcHBpZCI6ImtoYW9pZWJuZGtvamxtcHBlZW1qaGJwYmFuZGlsanBlIiwiY29ob3J0IjoiMTpjdXg6Iiwic3RhdHVzIjoib2siLCJjb2hvcnRuYW1lIjoiQXV0byIsInBpbmciOnsic3RhdHVzIjoib2sifSwidXBkYXRlY2hlY2siOnsic3RhdHVzIjoibm91cGRhdGUifX0seyJjb2hvcnRoaW50IjoiQXV0byIsImFwcGlkIjoiaGZua3BpbWxoaGdpZWFkZGdmZW1qaG9mbWZibG1uaWIiLCJjb2hvcnQiOiIxOmpjbDoiLCJzdGF0dXMiOiJvayIsImNvaG9ydG5hbWUiOiJBdXRvIiwicGluZyI6eyJzdGF0dXMiOiJvayJ9LCJ1cGRhdGVjaGVjayI6eyJzdGF0dXMiOiJub3VwZGF0ZSIsImluZm8iOiJiYW5kd2lkdGggbGltaXQifX0seyJhcHBpZCI6Imxsa2dqZmZjZHBmZm1oaWFrbWZjZGNibG9oY2NwZm1vIiwiY29ob3J0IjoiMTo6Iiwic3RhdHVzIjoib2siLCJjb2hvcnRuYW1lIjoiIiwicGluZyI6eyJzdGF0dXMiOiJvayJ9LCJ1cGRhdGVjaGVjayI6eyJfZXNiQWxsb3dsaXN0IjoidHJ1ZSIsInN0YXR1cyI6Im5vdXBkYXRlIn19LHsiY29ob3J0aGludCI6IkF1dG8iLCJhcHBpZCI6Imxhb2lncGJsbmxsZ2Nnam5qbmxsbWZvbGNrcGpsaGtpIiwiY29ob3J0IjoiMToxMHpyOiIsInN0YXR1cyI6Im9rIiwiY29ob3J0bmFtZSI6IkF1dG8iLCJwaW5nIjp7InN0YXR1cyI6Im9rIn0sInVwZGF0ZWNoZWNrIjp7InN0YXR1cyI6Im5vdXBkYXRlIn19LHsiY29ob3J0aGludCI6InN0YWJsZTY0IiwiYXBwaWQiOiJlaGdpZHBuZGJsbGFjcGphbGtpaW1rYmFkZ2pmbm5tYyIsImNvaG9ydCI6IjE6b2ZsOiIsInN0YXR1cyI6Im9rIiwiY29ob3J0bmFtZSI6InN0YWJsZTY0IiwicGluZyI6eyJzdGF0dXMiOiJvayJ9LCJ1cGRhdGVjaGVjayI6eyJzdGF0dXMiOiJub3VwZGF0ZSJ9fSx7ImNvaG9ydGhpbnQiOiJBdXRvIFN0YWdlMyIsImFwcGlkIjoiZWZuaW9qbG5qbmRtY2JpaWVlZ2tpY2Fkbm9lY2pqZWYiLCJjb2hvcnQiOiIxOjE4cWw6Iiwic3RhdHVzIjoib2siLCJjb2hvcnRuYW1lIjoiQXV0byBTdGFnZTMiLCJwaW5nIjp7InN0YXR1cyI6Im9rIn0sInVwZGF0ZWNoZWNrIjp7InN0YXR1cyI6Im5vdXBkYXRlIiwiaW5mbyI6ImJhbmR3aWR0aCBsaW1pdCJ9fSx7ImNvaG9ydGhpbnQiOiJBdXRvIiwiYXBwaWQiOiJqZmxvb2tnbmtjY2tob2JhZ2xuZGljbmJiZ2JvbmVnZCIsImNvaG9ydCI6IjE6czd4OiIsInN0YXR1cyI6Im9rIiwiY29ob3J0bmFtZSI6IkF1dG8iLCJwaW5nIjp7InN0YXR1cyI6Im9rIn0sInVwZGF0ZWNoZWNrIjp7InN0YXR1cyI6Im5vdXBkYXRlIiwiaW5mbyI6ImJhbmR3aWR0aCBsaW1pdCJ9fSx7ImNvaG9ydGhpbnQiOiIxMDgtYW5kLWFib3ZlLWFsbC11c2VycyIsImFwcGlkIjoiZ2dra2VoZ2JuZmpwZWdnZnBsZWVha3BpZGJraWJibW4iLCJjb2hvcnQiOiIxOnV0OS8xYTBmOjIzbWxAMC4xIiwic3RhdHVzIjoib2siLCJjb2hvcnRuYW1lIjoiTTEwOCBhbmQgQWJvdmUiLCJwaW5nIjp7InN0YXR1cyI6Im9rIn0sInVwZGF0ZWNoZWNrIjp7InN0YXR1cyI6Im5vdXBkYXRlIn19LHsiY29ob3J0aGludCI6IkF1dG8iLCJhcHBpZCI6ImphbWhjbm5raWhpbm1kbGtha2thb3BiamJiY25nZmxjIiwiY29ob3J0IjoiMTp3dnI6Iiwic3RhdHVzIjoib2siLCJjb2hvcnRuYW1lIjoiQXV0byIsInBpbmciOnsic3RhdHVzIjoib2sifSwidXBkYXRlY2hlY2siOnsic3RhdHVzIjoibm91cGRhdGUifX0seyJjb2hvcnRoaW50IjoiQXV0byIsImFwcGlkIjoib2pocGpsb2NtYm9nZGdtZnBraGxhYWVhbWliaG5waGgiLCJjb2hvcnQiOiIxOncweDoiLCJzdGF0dXMiOiJvayIsImNvaG9ydG5hbWUiOiJBbGwgdXNlcnMiLCJwaW5nIjp7InN0YXR1cyI6Im9rIn0sInVwZGF0ZWNoZWNrIjp7InN0YXR1cyI6Im5vdXBkYXRlIn19LHsiY29ob3J0aGludCI6IkF1dG8iLCJhcHBpZCI6ImVlaWdwbmdiZ2NvZ25hZGVlYmtpbGNwY2FlZGhlbGxoIiwiY29ob3J0IjoiMTp3NTk6Iiwic3RhdHVzIjoib2siLCJjb2hvcnRuYW1lIjoiQXV0byIsInBpbmciOnsic3RhdHVzIjoib2sifSwidXBkYXRlY2hlY2siOnsic3RhdHVzIjoibm91cGRhdGUifX0seyJhcHBpZCI6ImpmbGhjaGNjbXBwa2ZlYmtpYW1pbmFnZWVobWNoaWttIiwiY29ob3J0IjoiMToyNHZyOiIsInN0YXR1cyI6Im9rIiwiY29ob3J0bmFtZSI6IlN0YWJsZSIsInBpbmciOnsic3RhdHVzIjoib2sifSwidXBkYXRlY2hlY2siOnsic3RhdHVzIjoibm91cGRhdGUiLCJpbmZvIjoiYmFuZHdpZHRoIGxpbWl0In19LHsiY29ob3J0aGludCI6IkdlbmVyYWwgcmVsZWFzZSIsImFwcGlkIjoiZ29ucGVtZGdramNlY2RnYm5hYWJpcHBwYm1nZmdnYmUiLCJjb2hvcnQiOiIxOnoxeDoyNTFmQDAuMSIsInN0YXR1cyI6Im9rIiwiY29ob3J0bmFtZSI6IkF1dG8iLCJwaW5nIjp7InN0YXR1cyI6Im9rIn0sInVwZGF0ZWNoZWNrIjp7InN0YXR1cyI6Im5vdXBkYXRlIiwiaW5mbyI6ImJhbmR3aWR0aCBsaW1pdCJ9fSx7ImFwcGlkIjoibmlpa2hkZ2FqbHBoZmVoZXBhYmhoYmxha2JkZ2VlZmoiLCJjb2hvcnQiOiIxOjF1aDM6Iiwic3RhdHVzIjoib2siLCJjb2hvcnRuYW1lIjoiQXV0byBNYWluIENvaG9ydC4iLCJwaW5nIjp7InN0YXR1cyI6Im9rIn0sInVwZGF0ZWNoZWNrIjp7InN0YXR1cyI6Im5vdXBkYXRlIiwiaW5mbyI6ImJhbmR3aWR0aCBsaW1pdCJ9fV19fQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="11083906" offset="0" length="1105" />
        <PacketInfo time="11083921" offset="1105" length="1064" />
      </TcpPackets>
    </HTTPResponse>
    <HTTPTask id="2813" hostname="192.168.129.196" path="http://192.168.129.196/static/assets/third_party/echart/echarts.min.js" url="http://192.168.129.196/static/assets/third_party/echart/echarts.min.js" ip="192.168.129.196" port="80" connectionId="10" origin="HTML" frame="1" startTime="11097093" endTime="11097109">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="User-Agent" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMC4wLjAuMCBTYWZhcmkvNTM3LjM2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovLzE5Mi4xNjguMTI5LjE5Ni9ob21lL2luZGV4L21haW4uaHRtbA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>emgtQ04semg7cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>UEhQU0VTU0lEPTFjYzgwOTI0Y2NmYTM4Njc2MTU2Njk4NjI4Mzk5MmEx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTkyLjE2OC4xMjkuMTk2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Q2xvc2U=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly8xOTIuMTY4LjEyOS4xOTYvc3RhdGljL2Fzc2V0cy90aGlyZF9wYXJ0eS9lY2hhcnQvZWNoYXJ0cy5taW4uanMgSFRUUC8xLjENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMjAuMC4wLjAgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly8xOTIuMTY4LjEyOS4xOTYvaG9tZS9pbmRleC9tYWluLmh0bWwNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiB6aC1DTix6aDtxPTAuOQ0KQ29va2llOiBQSFBTRVNTSUQ9MWNjODA5MjRjY2ZhMzg2NzYxNTY2OTg2MjgzOTkyYTENCkhvc3Q6IDE5Mi4xNjguMTI5LjE5Ng0KQ29ubmVjdGlvbjogQ2xvc2UNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="PHPSESSID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MWNjODA5MjRjY2ZhMzg2NzYxNTY2OTg2MjgzOTkyYTE=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Date" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyMiBEZWMgMjAyMyAxNDoxOTozNyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QXBhY2hlLzIuNC4zOSAoV2luNjQpIE9wZW5TU0wvMS4xLjFiIG1vZF9mY2dpZC8yLjMuOWEgbW9kX2xvZ19yb3RhdGUvMS4wMg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAxMCBGZWIgMjAyMyAwNDoyNzo1MCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ImY4MDY5LTVmNDUwZWI4Y2ZkODAi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTAxNTkxMw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Y2xvc2U=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBGcmksIDIyIERlYyAyMDIzIDE0OjE5OjM3IEdNVA0KU2VydmVyOiBBcGFjaGUvMi40LjM5IChXaW42NCkgT3BlblNTTC8xLjEuMWIgbW9kX2ZjZ2lkLzIuMy45YSBtb2RfbG9nX3JvdGF0ZS8xLjAyDQpMYXN0LU1vZGlmaWVkOiBGcmksIDEwIEZlYiAyMDIzIDA0OjI3OjUwIEdNVA0KRVRhZzogImY4MDY5LTVmNDUwZWI4Y2ZkODAiDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KQ29udGVudC1MZW5ndGg6IDEwMTU5MTMNCkNvbm5lY3Rpb246IGNsb3NlDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="11097093" offset="0" length="318" />
          <PacketInfo time="11097109" offset="318" length="1015913" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>